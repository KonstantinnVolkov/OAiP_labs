unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.ExtCtrls, Vcl.StdCtrls;

type
  TArray = array of integer;
  TFunction = function (arr :array of integer; amount :integer) :TArray;
  TForm1 = class(TForm)
    StaticText1: TStaticText;
    StaticText13: TStaticText;
    StaticText14: TStaticText;
    StaticText17: TStaticText;
    StaticText20: TStaticText;
    comp10_bubble: TStaticText;
    trans10_bubble: TStaticText;
    StaticText2: TStaticText;
    StaticText3: TStaticText;
    StaticText4: TStaticText;
    StaticText5: TStaticText;
    StaticText6: TStaticText;
    StaticText7: TStaticText;
    StaticText8: TStaticText;
    StaticText9: TStaticText;
    StaticText10: TStaticText;
    StaticText11: TStaticText;
    StaticText12: TStaticText;
    StaticText15: TStaticText;
    StaticText16: TStaticText;
    StaticText18: TStaticText;
    StaticText19: TStaticText;
    StaticText21: TStaticText;
    StaticText22: TStaticText;
    StaticText23: TStaticText;
    StaticText24: TStaticText;
    StaticText25: TStaticText;
    StaticText26: TStaticText;
    StaticText27: TStaticText;
    StaticText28: TStaticText;
    StaticText29: TStaticText;
    StaticText30: TStaticText;
    StaticText31: TStaticText;
    StaticText32: TStaticText;
    StaticText33: TStaticText;
    StaticText34: TStaticText;
    StaticText35: TStaticText;
    StaticText36: TStaticText;
    StaticText37: TStaticText;
    StaticText38: TStaticText;
    StaticText39: TStaticText;
    StaticText40: TStaticText;
    StaticText41: TStaticText;
    StaticText42: TStaticText;
    StaticText43: TStaticText;
    StaticText44: TStaticText;
    StaticText45: TStaticText;
    StaticText46: TStaticText;
    StaticText47: TStaticText;
    StaticText48: TStaticText;
    StaticText49: TStaticText;
    StaticText50: TStaticText;
    StaticText51: TStaticText;
    StaticText52: TStaticText;
    StaticText53: TStaticText;
    StaticText54: TStaticText;
    StaticText55: TStaticText;
    StaticText56: TStaticText;
    StaticText57: TStaticText;
    StaticText58: TStaticText;
    StaticText59: TStaticText;
    StaticText60: TStaticText;
    StaticText61: TStaticText;
    StaticText62: TStaticText;
    StaticText63: TStaticText;
    StaticText64: TStaticText;
    StaticText65: TStaticText;
    StaticText66: TStaticText;
    StaticText67: TStaticText;
    StaticText68: TStaticText;
    StaticText69: TStaticText;
    StaticText70: TStaticText;
    StaticText71: TStaticText;
    Button1: TButton;
    Arr10: TMemo;
    Arr100: TMemo;
    Arr2000: TMemo;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;
var
  Form1 :TForm1;
  a, Sorted, Reversed :TArray;


implementation

{$R *.dfm}

function bubble_sort (var arr :TArray; var Form1 :TForm1) :TArray;
var
  max, i, j, temp :integer;
  compare, transposition :integer;
begin
  compare := 0;
  transposition := 0;
  max := Length(arr)-1;
  for j := 0 to max do
    for i := 0 to max - 1 do
    begin
      inc(compare);
      if arr[i] > arr[i + 1] then
      begin
        temp := arr[i];
        arr[i] := arr[i + 1];
        arr[i + 1] := temp;
        inc(transposition);
      end;
    end;
  form1.comp10_bubble.Caption := IntToStr(compare);
  form1.trans10_bubble.Caption := IntToStr(transposition);
end;

procedure reverse_array (arr :TArray);
var
  i, temp, max :integer;
begin
  max := length(arr)-1;
  for I := 0 to length(arr) div 2 do
  begin
    temp := arr[i];
    arr[i] := arr[max-i];
    arr[max-i] := temp;
  end;
end;

function generate_mas (Amount :integer; out arr :TArray; var Form1 :TForm1) :TArray;
var
  i :integer;
begin
  randomize;
  SetLength(arr,amount);
  for I := 0 to amount-1 do
  begin
    arr[i] := random(amount*10);
    case amount of
    10 : Form1.Arr10.Lines.Add(IntToStr(arr[i]));
    100 : Form1.Arr100.Lines.Add(IntToStr(arr[i]));
    2000 : Form1.Arr2000.Lines.Add(IntToStr(arr[i]));
    end;
  end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  generate_mas(10,a,Form1);
  bubble_sort(a,Form1);
  reverse_array(a);
//  generate_mas(100,b,Form1);
//  generate_mas(2000,c,Form1);

end;

end.
